AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters:
    InvertirOnlinePassword:
        Type: String
        Default: password
    InvertirOnlineUsername:
        Type: String
        Default: username
    targetStage:
        Description: Define stage to which Lambdas/API Gateways should be deployed.
        Type: String
        Default: dev
        AllowedValues:
            - dev
            - test
            - prod
        ConstraintDescription: Only stages dev, test, prod are allowed
Description: >
    AWS Serverless Application for trading

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
    Function:
        Timeout: 140

Resources:
    TradingCommonFunctions:
        Type: AWS::Serverless::LayerVersion
        Properties:
            LayerName: TradingCommonFunctions
            Description: Funciones comunes de Trading
            ContentUri: ./commons/python.zip
            CompatibleRuntimes:
              - python3.7
              - python3.6
    GetShareHistory:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: ./history
            Handler: get_share_history.get_historical_share_handler
            Runtime: python3.6
            Role: 'arn:aws:iam::382744615649:role/service-role/invertir_lambda_role' #Tiene permisos para acceder a S3
            Environment:
                Variables:
                    INVERTIRONLINE_PASSWORD: !Ref InvertirOnlinePassword
                    INVERTIRONLINE_USERNAME: !Ref InvertirOnlineUsername
            #Events:
            #    getSharesHistory:
            #        Type: Api
            #        Properties:
            #            Path: /history/{index}/{share}
            #            Method: POST
            Layers:
                - !Ref TradingCommonFunctions
    GetIndexes:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: ./indexes
            Handler: get_indexes.get_indexes
            Runtime: python3.6
            Role: 'arn:aws:iam::382744615649:role/service-role/invertir_lambda_role' #Tiene permisos para acceder a S3
            Events:
                getSharesHistory:
                    Type: Api
                    Properties:
                        Path: /indexes
                        Method: get
                        RestApiId:
                            Ref: TradingRestApi
            Layers:
                - !Ref TradingCommonFunctions

    TradingRestApi:
        Type: AWS::Serverless::Api
        Properties:
            Name: TradingRestApi
            StageName: !Ref targetStage
            DefinitionBody:
                swagger: "2.0"
                info:
                    title: TradingApiGateway
                    description: Rest Api for trading app
                    version: 1.0.0
                definitions:
                    Empty:
                        type: object
                        title: Empty Schema
                paths:
                    "/indexes":
                        get:
                            produces:
                                - application/json
                            responses:
                                '200':
                                    description: 200 response
                                    schema:
                                        $ref: "#/definitions/Empty"
                            x-amazon-apigateway-integration:
                                responses:
                                    default:
                                        statusCode: 200
                                        responseTemplates:
                                            "application/json": ""
                                # NOTE: ${LambdaFunction} must match the Lambda resourcename
                                uri:
                                    Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetIndexes.Arn}/invocations"

                                passthroughBehavior: when_no_match
                                httpMethod: POST
                                type: aws
Outputs:
    GetShareHistory:
      Description: "GetShareHistory Lambda Function ARN"
      Value: !GetAtt GetShareHistory.Arn
    GetIndexes:
        Description: "GetIndexes Lambda Function ARN"
        Value: !GetAtt GetIndexes.Arn